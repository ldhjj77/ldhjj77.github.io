import numpy as np

# 인덱스 배열로 인덱싱


a = np.arange(12).reshape(3, 4)
print(a)
# # [[ 0  1  2  3]
# #  [ 4  5  6  7]
# #  [ 8  9 10 11]]

i = np.array([[0, 1],  # 'a'의 첫 번째 희미한 인덱스
               [1, 2]])
j = np.array([[2, 1],  # 두 번째 희미한 인덱스
               [3, 3]])

print(a[i, j])  # i와 j는 같은 모양이어야합니다.
# # [[ 2  5]
# #  [ 7 11]]

print(a[i, 2])
# # [[ 2  6]
# #  [ 6 10]]

print(a[:, j])
# # [[[ 2  1]
# #   [ 3  3]]

# #  [[ 6  5]
# #   [ 7  7]]

# #  [[10  9]
# #   [11 11]]]

l = (i, j)
# a [i, j]와 동일
print(a[l])
# # [[ 2  5]
# #  [ 7 11]]


time = np.linspace(20, 145, 5)  # 시간 척도
data = np.sin(np.arange(20)).reshape(5, 4)  # 4 개의 시간 종속 시리즈
print(time)
# [ 20.    51.25  82.5  113.75 145.  ]

print(data)
# [[ 0.          0.84147098  0.90929743  0.14112001]
#  [-0.7568025  -0.95892427 -0.2794155   0.6569866 ]
#  [ 0.98935825  0.41211849 -0.54402111 -0.99999021]
#  [-0.53657292  0.42016704  0.99060736  0.65028784]
#  [-0.28790332 -0.96139749 -0.75098725  0.14987721]]

# 각 계열에 대한 최대 지수
ind = data.argmax(axis=0)
print(ind)
# [2 0 3 1]

# 최대 값에 해당하는 시간
time_max = time[ind]

data_max = data[ind, range(data.shape[1])]  # => data[ind[0], 0], data[ind[1], 1]...
print(time_max)
# [ 82.5   20.   113.75  51.25]

print(data_max)
# [0.98935825 0.84147098 0.99060736 0.6569866 ]

print(np.all(data_max == data.max(axis=0)))
# True


